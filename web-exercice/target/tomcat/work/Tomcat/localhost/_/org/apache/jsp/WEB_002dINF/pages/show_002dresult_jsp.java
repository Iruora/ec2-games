/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-08-08 16:45:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class show_002dresult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Result</title>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Roboto\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"/static/bootstrap-3.3.7/css/bootstrap.min.css\"\r\n");
      out.write("\trel=\"stylesheet\" media=\"screen\">\r\n");
      out.write("<link href=\"/static/css/design.css\" rel=\"stylesheet\" media=\"screen\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row well well-lg\">\r\n");
      out.write("\t\t\t<a href=\"\" class=\"btn btn-warning btn-lg \"> <span\r\n");
      out.write("\t\t\t\tclass=\"glyphicon glyphicon-refresh\" aria-hidden=\"true\"></span>\r\n");
      out.write("\t\t\t</a>\r\n");
      out.write("\t\t\t<div class=\"btn-group \">\r\n");
      out.write("\t\t\t\t<a href=\"/exercice\" class=\"btn btn-lg btn-primary\">Back to\r\n");
      out.write("\t\t\t\t\texercice</a> <a href=\"/exercice/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${operation}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\"\r\n");
      out.write("\t\t\t\t\tclass=\"btn btn-lg btn-info\">Back to numbers</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<button class=\"btn btn-success btn-lg\" type=\"button\">\r\n");
      out.write("\t\t\t\tScore <a><span class=\"badge\" id=\"scoreBadge\"> </span></a>\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row well well-lg text-center\">\r\n");
      out.write("\t\t\t<h1 id=\"chrono\"> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${countDownStart}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</h1>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"calcul\" class=\"row\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div id=\"results\" class=\"row\"></div>\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<div class=\"well well-lg col-md-3 col-md-offset-3  h100 ftrem\" id=\"op-str\"> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${operationString}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(" </div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"well well-lg col-md-3 h100\">\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"userInput\">Result :</label> \r\n");
      out.write("\t\t\t\t\t\t<input type=\"number\" id=\"userInput\" class=\"form-control\" autofocus>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row\" id=\"next\">\r\n");
      out.write("\t\t\t\t\t\t\t<a id=\"refresh-btn\" class=\"btn btn-warning btn-lg col-md-4\"> \r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-chevron-right\" aria-hidden=\"true\"></span>\r\n");
      out.write("\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"row \">\r\n");
      out.write("\t\t\t\t<button id=\"verifBtn\"\r\n");
      out.write("\t\t\t\t\tclass=\"btn btn-success btn-lg col-md-6 col-md-10 col-md-offset-3\">verify</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("<!-- \t\t<div class=\"row\" id=\"next\"> -->\r\n");
      out.write("<!-- \t\t\t<a id=\"refresh-btn\" class=\"btn btn-warning btn-lg\"> <span -->\r\n");
      out.write("<!-- \t\t\t\tclass=\"glyphicon glyphicon-chevron-right\" aria-hidden=\"true\"></span> -->\r\n");
      out.write("<!-- \t\t\t</a> -->\r\n");
      out.write("<!-- \t\t</div> -->\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"container\"></div>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/static/js/jquery.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\"\r\n");
      out.write("\t\tsrc=\"/static/bootstrap-3.3.7/js/bootstrap.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready( function () {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar operationString;\r\n");
      out.write("\t\tvar resultExpected;\r\n");
      out.write("\t\t$.post(\r\n");
      out.write("\t\t\t\t\"/exercice/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${operation}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${firstNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/sc\",\r\n");
      out.write("\t\t\t\t{success: true},\r\n");
      out.write("\t\t\t\tdata => {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t//console.log(\"Scooooooooooooore !\"+data);\r\n");
      out.write("\t\t\t\t\t$(\"#scoreBadge\").text(data);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("        \t);\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\tfunction calculGetter(){\r\n");
      out.write("\t\t\t//console.log(\"begin calcul getter\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.get(\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\"/exercice/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${operation}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${firstNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/result\",\r\n");
      out.write("\t\t\t\t\t{},\r\n");
      out.write("\t\t\t\t\tdata => {\r\n");
      out.write("\t\t\t\t\t\tvar arrayOfStrings = data.split(\"#\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t//console.log(\"result : \"+arrayOfStrings);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t$(\"#verifBtn\").show();\r\n");
      out.write("\t\t\t\t\t\t$(\"#userInput\").show();\r\n");
      out.write("\t\t\t\t\t\t$(\"#userInput\" ).focus();\r\n");
      out.write("\t\t\t\t\t\tconsole.log(arrayOfStrings.length);\r\n");
      out.write("\t\t\t\t\t\tif (arrayOfStrings.length > 2) {\r\n");
      out.write("\t\t\t\t\t\t\toperationString = arrayOfStrings[2];\r\n");
      out.write("\t\t\t\t\t\t\tresultExpected = arrayOfStrings[3];\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log(operationString);\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log(resultExpected);\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log(arrayOfStrings.length);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\telse console.log(\"error ! Wrong String input\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#op-str\").html(operationString);\r\n");
      out.write("\t\t\t\t\t\t//===================\r\n");
      out.write("\t\t\t\t\t\t$userInputField = $(\"#userInput\");\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t$next = $(\"#next\");\r\n");
      out.write("\t\t\t\t\t\t$next.hide();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tif ($userInputField.val() != \"\") {\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#verifBtn\").prop( \"disabled\", false );\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\telse $(\"#verifBtn\").prop( \"disabled\", true );\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t$userInputField.on(\"keyup\", e => {\r\n");
      out.write("\t\t\t\t\t\t\t$userInput = $(\"#userInput\").val();\r\n");
      out.write("\t\t\t\t\t\t\t//console.log(\"&&&\"+$userInputField.val());\r\n");
      out.write("\t\t\t\t\t\t\tif ($userInputField.val() != \"\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#verifBtn\").prop( \"disabled\", false );\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\telse $(\"#verifBtn\").prop( \"disabled\", true );\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tif (e.keyCode === 13) {\r\n");
      out.write("\t\t\t        \t\t\t$(\"#verifBtn\").click();\r\n");
      out.write("\t\t\t    \t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t//=======================================\r\n");
      out.write("\t\t\t    \t\t$(\"#verifBtn\").on(\"click\", (e) => {\r\n");
      out.write("\t\t\t    \t\t\t$userInput = $(\"#userInput\").val();\r\n");
      out.write("\r\n");
      out.write("\t\t\t            \t$resultsString = $(\"#results\");\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t            \t//console.log(\"server : \"+resultExpected);\r\n");
      out.write("\t\t\t            \t//console.log(\"client : \"+$userInputField.val());\r\n");
      out.write("\t\t\t            \t//console.log(\"entryDiff : \"+($userInput - resultExpected));\r\n");
      out.write("\r\n");
      out.write("\t\t\t            \tif ((resultExpected == $userInputField.val()) ) {\r\n");
      out.write("\t\t\t            \t\t//console.log(\"gut\");\r\n");
      out.write("\t\t\t            \t\t$next.show();\r\n");
      out.write("\t\t\t            \t\t//--------------------------------\r\n");
      out.write("\t\t\t            \t\t\r\n");
      out.write("\t\t\t            \t\t//--------------------------------\r\n");
      out.write("\t\t\t                \t$( \".demo-container\" ).html( \"<p>All new content. <em>You bet!</em></p>\" );\r\n");
      out.write("\t\t\t                \t$resultsString.html(\"<div class='alert alert-success alert-text' role='alert' id='success-alert' > well done ! </div> \");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t//alert(\"/exercice/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${operation}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${firstNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/score\");\r\n");
      out.write("\t\t\t                \t$.post(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\"/exercice/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${operation}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${firstNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/score\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t{success: true},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdata => {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t//console.log(\"Scooooooooooooore !\"+data);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t$(\"#scoreBadge\").text(data);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t    \t        \t);\r\n");
      out.write("\t\t\t                \t$(\"#verifBtn\").hide();\r\n");
      out.write("\t\t\t                \t$(\"#verifBtn\").off(\"click\");\r\n");
      out.write("\t\t\t                \t$(\"#userInput\").val(\"\");\r\n");
      out.write("\t\t\t                \t$(\"#userInput\").hide();\r\n");
      out.write("\t\t\t            \t}\r\n");
      out.write("\t\t\t            \telse {\r\n");
      out.write("\t\t\t            \t\t//console.log(\"Oh snap!\");\r\n");
      out.write("\t\t\t            \t\t$next.hide();\r\n");
      out.write("\t\t\t            \t\t$(\"#userInput\").val(\"\");\r\n");
      out.write("\t\t\t                \t$resultsString.html(\"<div class='alert alert-danger alert-text' role='alert' id='failure-alert'>oops !</div>\");\r\n");
      out.write("\t\t\t            \t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t//===================\t\t\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t);\r\n");
      out.write("\t\t\t//console.log(\"end  calcul getter\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tsetTimeout(function(){\r\n");
      out.write("\t\t\tcalculGetter();\t\r\n");
      out.write("\t\t\t$(\"#test-res\").text(resultExpected);\r\n");
      out.write("\t\t}, 100);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#refresh-btn\").on(\"click\", (e) => {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tsetTimeout(function(){\r\n");
      out.write("\t\t\t\tcalculGetter();\t\r\n");
      out.write("\t\t\t}, 100);\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tsetInterval(function() {\r\n");
      out.write("\t\t\tlet y = parseInt($(\"#chrono\").text());\r\n");
      out.write("\t\t\tif ( ! isNaN(y)) {\r\n");
      out.write("\t\t\t\ty--;\r\n");
      out.write("\t\t\t\t$(\"#chrono\").text(y);\r\n");
      out.write("\t\t\t\tif(y == 0) {\r\n");
      out.write("\t\t\t\t\t$(\"#verifBtn\").prop( \"disabled\", true );\r\n");
      out.write("\t\t\t\t\t$(\"#refresh-btn\").prop( \"disabled\", true );\r\n");
      out.write("\t\t\t\t\twindow.location.href=\"/exercice/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${operation}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t },1000);\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f0.setParent(null);
    // /WEB-INF/pages/show-result.jsp(5,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/pages/show-result.jsp(5,0) '${countDownStart}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${countDownStart}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    // /WEB-INF/pages/show-result.jsp(5,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setVar("result");
    int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
    if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
    return false;
  }
}
